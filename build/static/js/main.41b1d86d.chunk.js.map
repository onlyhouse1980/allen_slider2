{"version":3,"sources":["components/ImageSlider.js","data/data.js","App.js","reportWebVitals.js","index.js"],"names":["NextArrow","_ref","onClick","_jsx","className","children","BsChevronRight","PrevArrow","_ref2","BsChevronLeft","ImageSlider","_ref3","images","_ref3$slidesToShow","slidesToShow","_useState","useState","_useState2","_slicedToArray","imageIndex","setImageIndex","settings","centerMode","infinite","dots","speed","centerPadding","swipeToSlide","focusOnSelect","nextArrow","prevArrow","beforeChange","current","next","responsive","breakpoint","slidesToScroll","templateImages","map","image","idx","code","src","alt","id","Slider","_objectSpread","LARGE_IMAGES","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"uSAMMA,EAAY,SAAHC,GAAqB,IAAfC,EAAOD,EAAPC,QACnB,OACEC,cAAA,OAAKC,UAAU,YAAYF,QAASA,EAAQG,SAC1CF,cAACG,IAAc,KAGrB,EAEMC,EAAY,SAAHC,GAAqB,IAAfN,EAAOM,EAAPN,QACnB,OACEC,cAAA,OAAKC,UAAU,YAAYF,QAASA,EAAQG,SAC1CF,cAACM,IAAa,KAGpB,EAuDeC,EArDK,SAAHC,GAAsC,IAAhCC,EAAMD,EAANC,OAAMC,EAAAF,EAAEG,oBAAY,IAAAD,EAAG,EAACA,EAC7CE,EAAoCC,mBAAS,GAAEC,EAAAC,YAAAH,EAAA,GAAxCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAE1BI,EAAW,CACfjB,UAAW,SACXkB,YAAY,EACZC,UAAU,EACVC,MAAM,EACNC,MAAO,IACPX,aAAcA,EACdY,cAAe,IACfC,cAAc,EACdC,eAAe,EACfC,UAAW1B,cAACH,EAAS,CAACE,SAAO,IAC7B4B,UAAW3B,cAACI,EAAS,CAACL,SAAO,IAC7B6B,aAAc,SAACC,EAASC,GAAI,OAAKb,EAAca,EAAK,EACpDC,WAAY,CACV,CACEC,WAAY,KACZd,SAAU,CACRP,aAAc,EACdsB,eAAgB,IAGpB,CACED,WAAY,IACZd,SAAU,CACRP,aAAc,EACdsB,eAAgB,MAMlBC,EAAiBzB,EAAO0B,KAAI,SAACC,EAAOC,GACxC,OAAc,OAAVD,EAEApC,cAAA,OACEC,UAAWoC,IAAQrB,EAAa,cAAgB,QAAQd,SAGxDF,cAAA,OAAKC,UAAU,eAAcC,SAC1BkC,EAAME,KAAOF,EAAME,KAAOtC,cAAA,OAAKuC,IAAKH,EAAMG,IAAKC,IAAKJ,EAAMI,SAHxDJ,EAAMK,IAQV,IACT,IAEA,OAAOzC,cAAC0C,IAAMC,wBAAA,GAAKzB,GAAQ,IAAAhB,SAAGgC,IAChC,ECxCeU,EAAe,CAC1B,CACEH,GAAI,EACJF,IAAK,0BACLC,IAAK,qBAEP,CACEC,GAAI,EACJF,IAAK,0BACLC,IAAK,qBAEP,CACEC,GAAI,EACJF,IAAK,0BACLC,IAAK,qBAEP,CACEC,GAAI,EACJF,IAAK,0BACLC,IAAK,qBAEP,CACEC,GAAI,EACJF,IAAK,0BACLC,IAAK,qBAEP,CACEC,GAAI,EACJF,IAAK,0BACLC,IAAK,sBC/CIK,MAVf,WACE,OACE7C,cAAA,OAAKC,UAAU,MAAKC,SAClBF,cAAA,OAAKC,UAAU,YAAWC,SACxBF,cAACO,EAAW,CAACE,OAAQmC,OAI7B,ECDeE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,SAAAnD,GAAkD,IAA/CoD,EAAMpD,EAANoD,OAAQC,EAAMrD,EAANqD,OAAQC,EAAMtD,EAANsD,OAAQC,EAAMvD,EAANuD,OAAQC,EAAOxD,EAAPwD,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACV,GAEJ,ECJAQ,IAASC,OACPxD,cAACyD,IAAMC,WAAU,CAAAxD,SACfF,cAAC6C,EAAG,MAENc,SAASC,eAAe,SAM1Bd,G","file":"static/js/main.41b1d86d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Slider from \"react-slick\";\nimport { BsChevronLeft, BsChevronRight } from \"react-icons/bs\";\n\nimport \"./ImageSlider.css\";\n\nconst NextArrow = ({ onClick }) => {\n  return (\n    <div className=\"nextArrow\" onClick={onClick}>\n      <BsChevronRight />\n    </div>\n  );\n};\n\nconst PrevArrow = ({ onClick }) => {\n  return (\n    <div className=\"prevArrow\" onClick={onClick}>\n      <BsChevronLeft />\n    </div>\n  );\n};\n\nconst ImageSlider = ({ images, slidesToShow = 3 }) => {\n  const [imageIndex, setImageIndex] = useState(0);\n\n  const settings = {\n    className: \"center\",\n    centerMode: true,\n    infinite: true,\n    dots: false,\n    speed: 300,\n    slidesToShow: slidesToShow,\n    centerPadding: \"0\",\n    swipeToSlide: true,\n    focusOnSelect: true,\n    nextArrow: <NextArrow onClick />,\n    prevArrow: <PrevArrow onClick />,\n    beforeChange: (current, next) => setImageIndex(next),\n    responsive: [\n      {\n        breakpoint: 1490,\n        settings: {\n          slidesToShow: 3,\n          slidesToScroll: 1\n        }\n      },\n      {\n        breakpoint: 820,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1\n        }\n      }\n    ]\n  };\n\n  const templateImages = images.map((image, idx) => {\n    if (image !== null) {\n      return (\n        <div\n          className={idx === imageIndex ? \"activeSlide\" : \"slide\"}\n          key={image.id}\n        >\n          <div className=\"slideWrapper\">\n            {image.code ? image.code : <img src={image.src} alt={image.alt} />}\n          </div>\n        </div>\n      );\n    }\n    return null;\n  });\n\n  return <Slider {...settings}>{templateImages}</Slider>;\n};\n\nexport default ImageSlider;\n","export const IMAGES = [\n    {\n      id: 1,\n      src: \"/images/image.png\",\n      alt: \"Placeholder image\",\n    },\n    {\n      id: 2,\n      src: \"/images/image.png\",\n      alt: \"Placeholder image\",\n    },\n    {\n      id: 3,\n      src: \"/images/image.png\",\n      alt: \"Placeholder image\",\n    },\n    {\n      id: 4,\n      src: \"/images/image.png\",\n      alt: \"Placeholder image\",\n    },\n    {\n      id: 5,\n      src: \"/images/image.png\",\n      alt: \"Placeholder image\",\n    },\n    {\n      id: 6,\n      src: \"/images/image.png\",\n      alt: \"Placeholder image\",\n    },\n  ];\n  \n  export const LARGE_IMAGES = [\n    {\n      id: 1,\n      src: \"/images/Efficiency1.png\",\n      alt: \"Placeholder image\",\n    },\n    {\n      id: 2,\n      src: \"/images/Efficiency1.png\",\n      alt: \"Placeholder image\",\n    },\n    {\n      id: 3,\n      src: \"/images/Efficiency3.png\",\n      alt: \"Placeholder image\",\n    },\n    {\n      id: 4,\n      src: \"/images/Efficiency1.png\",\n      alt: \"Placeholder image\",\n    },\n    {\n      id: 5,\n      src: \"/images/Efficiency3.png\",\n      alt: \"Placeholder image\",\n    },\n    {\n      id: 6,\n      src: \"/images/Efficiency3.png\",\n      alt: \"Placeholder image\",\n    },\n  ];\n  ","import \"./App.css\";\nimport ImageSlider from \"./components/ImageSlider\";\n\nimport { LARGE_IMAGES } from \"./data/data\";\n\nfunction App() {\n  return (\n    <div className='App'>\n      <div className='container'>\n        <ImageSlider images={LARGE_IMAGES} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}